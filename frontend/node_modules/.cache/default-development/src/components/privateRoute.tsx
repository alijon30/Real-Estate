import React, {ReactElement} from 'react';
import {Route, Navigate} from 'react-router-dom';
import {connect} from 'react-redux';
import { RootState } from '../store';

interface StateProps {
    auth: {
        isAuthenticated: boolean | null;
        loading: boolean;
    }
}
interface OwnProps {
    children: ReactElement;
}
type PrivateRouteProps = StateProps & OwnProps;

const PrivateRoute: React.FC<PrivateRouteProps> = ({ auth: { isAuthenticated, loading }, children }) => {
    if (!loading && !isAuthenticated) {
      return <Navigate to="/" replace />;
    }
  
    return children;
  };


  const mapStateToProps = (state: RootState): StateProps => ({
    auth: state.auth,
  });


export default connect(mapStateToProps)(PrivateRoute);