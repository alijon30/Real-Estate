import React, {useState} from 'react';
import {connect} from 'react-redux';
import {Link, Navigate} from 'react-router-dom';
import {Helmet} from 'react-helmet';
import { setAlert } from '../actions/alert';
import { signup } from '../actions/auth';
import { RootState } from '../store';

interface SignUpProps {
  setAlert: (msg: string, alertType: 'success' | 'error', timeout?: number) => void;
  signup: (email: string, name: string, password: string, password2: string) => void;
  isAuthenticated: boolean | null;
}


const SignUp: React.FC<SignUpProps> = ({setAlert, signup, isAuthenticated}) => {

  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    password2: ''
  })

  const {name, email, password, password2} = formData;

  const onChange = (e:React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name]: e.target.value});

  const onSubmit = (e:React.FormEvent<HTMLFormElement>)=> {
    e.preventDefault();
    if (password !== password2)
      setAlert('Passwords do not match', 'error')
    else
      signup(name, email, password, password2)
  }


  if (isAuthenticated)
    return <Navigate to='/' />


  return (
    <div className='auth'>
      <Helmet>
        <title>Real Estate - Sign Up</title>
        <meta 
          name ='description'
          content = 'sign up page'
        />
      </Helmet>
      <h1 className='auth__title'>Sign Up</h1>
      <p className='auth__lead'>Create your Account</p>
      <form className='auth__form' onSubmit={e => onSubmit(e)}>
      <div className='auth__form__group'>
          <input className='auth__form__input' type='name' placeholder='name' name='name' value = {name} onChange={e=>onChange(e)} required/>
        </div>
        <div className='auth__form__group'>
          <input className='auth__form__input' type='email' placeholder='email' name='email' value = {email} onChange={e=>onChange(e)} required/>
        </div>
        <div className='auth__form__group'>
          <input className='auth__form__input' type='password' placeholder='Password' name='password' value = {password} onChange={e=>onChange(e)} minLength={6} required/>
        </div>
        <div className='auth__form__group'>
          <input className='auth__form__input' type='password' placeholder='Confirm Password' name='password2' value = {password2} onChange={e=>onChange(e)} minLength={6} required/>
        </div>
        <button className='auth__form__button'>Register</button>
      </form>
      <p className='auth__authtext'>
        Already have an account? <Link className='auth__authtext__link' to='/signin'>Sign In</Link>
      </p>
    </div>
  )
}

const mapStateToProps = (state: RootState) => ({
  isAuthenticated: state.auth.isAuthenticated,
})

export default connect(mapStateToProps, { setAlert, signup })(SignUp);
