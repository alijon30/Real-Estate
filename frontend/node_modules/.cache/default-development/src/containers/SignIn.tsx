import React, {useState} from 'react'
import {Link, Navigate} from 'react-router-dom';
import {Helmet} from 'react-helmet';
import {login} from '../actions/auth'
import { connect } from 'react-redux';
import { RootState } from '../store';


interface SignInProps {
  login: (email:string, password: string) => void;
  isAuthenticated: boolean | null;
}


const SignIn:React.FC<SignInProps> = ({login, isAuthenticated}) => {

  const [formData, setFormData] = useState({
    email: '',
    password: ''
  })

  const {email, password} = formData;

  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name]: e.target.value});

  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    login(email, password);
  };

  if (isAuthenticated) return <Navigate to ='/'/>

  return (
    <div className='auth'>
      <Helmet>
        <title>Real Estate - Login</title>
        <meta 
          name ='description'
          content = 'login page'
        />
      </Helmet>
      <h1 className='auth__title'>Sign In</h1>
      <p className='auth__lead'>Sign into your Account</p>
      <form className='auth__form' onSubmit={e => onSubmit(e)}>
        <div className='auth__form__group'>
          <input className='auth__form__input' type='email' placeholder='email' name='email' value = {email} onChange={e=>onChange(e)} required/>
        </div>
        <div className='auth__form__group'>
          <input className='auth__form__input' type='password' placeholder='password' name='password' value = {password} onChange={e=>onChange(e)} minLength={6} required/>
        </div>
        <button className='auth__form__button'>Login</button>
      </form>
      <p className='auth__authtext'>
        Don't have an account? <Link className='auth__authtext__link' to='/signup'>Sign Up</Link>
      </p>
    </div>
  );
};

const mapStateToProps = (state: RootState) => ({
  isAuthenticated: state.auth.isAuthenticated
})

export default connect(mapStateToProps, { login })(SignIn);
