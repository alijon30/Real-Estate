{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('http://localhost:8001/api/token/', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert('Authenticated successfully', 'success'));\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch(setAlert('Error Authenticating', 'error'));\n  }\n};\nexport const signup = (email, name, password, password2) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    password2\n  });\n  try {\n    const res = await axios.post('http://localhost:8001/api/accounts/signup', body, config);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n    dispatch(login(email, password));\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n    dispatch(setAlert('Error Authenticating', 'error'));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch(setAlert('logout successful.', 'success'));\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","signup","name","password2","logout"],"sources":["/Users/alijonkarimberdiev/Projects/Real_Estate/frontend/src/actions/auth.tsx"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\nimport { AppThunk } from '../store';\nimport { Dispatch } from 'redux';\n\n\nexport const login = (email: string, password:string): AppThunk => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({email, password});\n    try{\n        const res = await axios.post('http://localhost:8001/api/token/', body, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Authenticated successfully', 'success'));\n    } catch (err){\n        dispatch({\n            type: LOGIN_FAIL\n        });\n\n        dispatch(setAlert('Error Authenticating', 'error'));\n    }\n}\n\nexport const signup = (email: string, name: string, password: string, password2: string): AppThunk => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({name, email, password, password2});\n\n    try{\n        const res = await axios.post('http://localhost:8001/api/accounts/signup', body, config)\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(login(email, password));\n    } catch (err){\n        dispatch({\n            type: SIGNUP_FAIL\n        });\n\n        dispatch(setAlert('Error Authenticating', 'error'));\n    }\n    \n}\n\nexport const logout = (): AppThunk => (dispatch) => {\n    dispatch(setAlert('logout successful.', 'success'));\n    dispatch({type: LOGOUT});\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAClC,SACIC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,MAAM,QACH,SAAS;AAKhB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAa,EAAEC,QAAe,KAAe,MAAOC,QAAQ,IAAK;EACnF,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACP,KAAK;IAAEC;EAAQ,CAAC,CAAC;EAC9C,IAAG;IACC,MAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,kCAAkC,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAE9ED,QAAQ,CAAC;MACLQ,IAAI,EAAEd,aAAa;MACnBe,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IAEFV,QAAQ,CAACT,QAAQ,CAAC,4BAA4B,EAAE,SAAS,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOoB,GAAG,EAAC;IACTX,QAAQ,CAAC;MACLQ,IAAI,EAAEb;IACV,CAAC,CAAC;IAEFK,QAAQ,CAACT,QAAQ,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;EACvD;AACJ,CAAC;AAED,OAAO,MAAMqB,MAAM,GAAGA,CAACd,KAAa,EAAEe,IAAY,EAAEd,QAAgB,EAAEe,SAAiB,KAAe,MAAOd,QAAQ,IAAK;EACtH,MAAMC,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EACD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAACQ,IAAI;IAAEf,KAAK;IAAEC,QAAQ;IAAEe;EAAS,CAAC,CAAC;EAE/D,IAAG;IACC,MAAMR,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,2CAA2C,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAEvFD,QAAQ,CAAC;MACLQ,IAAI,EAAEhB,cAAc;MACpBiB,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;IAEFV,QAAQ,CAACH,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOY,GAAG,EAAC;IACTX,QAAQ,CAAC;MACLQ,IAAI,EAAEf;IACV,CAAC,CAAC;IAEFO,QAAQ,CAACT,QAAQ,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;EACvD;AAEJ,CAAC;AAED,OAAO,MAAMwB,MAAM,GAAGA,CAAA,KAAiBf,QAAQ,IAAK;EAChDA,QAAQ,CAACT,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;EACnDS,QAAQ,CAAC;IAACQ,IAAI,EAAEZ;EAAM,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}